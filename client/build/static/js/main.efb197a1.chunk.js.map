{"version":3,"sources":["components/Metrics/Metric.jsx","components/Chart/Chart.jsx","components/Pagination/Pagination.jsx","components/Dashboard/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Metrics","metricData","className","measure","dimensions","map","item","index","name","value","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","title","display","text","elements","point","radius","Chart","useState","objectData","setObjectData","useEffect","axios","post","_id","then","res","console","log","data","catch","err","labels","date","Date","timestamp","getDate","getMonth","getFullYear","datasets","label","line_status","original_value","borderColor","backgroundColor","min_band","max_band","forecasted_value","Pagination","currentPage","noOfPages","paginate","pageNumbers","i","push","style","marginBottom","number","onClick","Dashboard","props","metrics","setMetrics","setCurrentPage","get","length","class","top","left","marginTop","marginRight","width","height","role","paddingTop","background","color","Metric","pageNumber","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb197a1.chunk.js","sourcesContent":["const Metrics = ({metricData}) => {\r\n  const metric = {\r\n    \"_id\": \"60508885da4c96019c357c19_f79e329cf4d13e3613d5a690ef19bfe9\",\r\n    \"measure\": \"revenue\",\r\n    \"dimensions\": [\r\n      {\r\n        \"name\": \"country\",\r\n        \"value\": \"USA\"\r\n      },\r\n      {\r\n        \"name\": \"productfamily\",\r\n        \"value\": \"Shoes\"\r\n      },\r\n      {\r\n        \"name\": \"devicetype\",\r\n        \"value\": \"Mobile\"\r\n      },\r\n      {\r\n        \"name\": \"os\",\r\n        \"value\": \"iOS\"\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"col-12 mb-2\">\r\n        <span className=\"ps-4 field\">Measure : </span><span className=\"details\">{metricData && metricData.measure}</span>\r\n      </div>\r\n      <div className=\"col-12 mb-2\">\r\n        <div className=\"ps-4\">\r\n          <span className=\"field\">Dimensions : </span> <br />\r\n          <div className=\"row d-flex justify-content-between ps-2\">\r\n          {\r\n            metricData && metricData.dimensions.map((item, index) => {\r\n              return (\r\n                <div key={index} className='col-12 col-md-3 pe-3 dimensions'>\r\n                  <span className='field'>{item.name + \" : \"}</span> <span className='details'>{item.value}</span>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Metrics;","import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nChartJS.register( CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Data Visualisation',\r\n    },\r\n  },\r\n  elements: {\r\n    point:{\r\n        radius: 0\r\n    }\r\n  },\r\n};\r\n\r\nconst Chart = ({metricData}) => {\r\n  // console.log(metricData);\r\n  const [ objectData, setObjectData] = useState([]);\r\n  useEffect(()=> {\r\n    // console.log(\"now\");\r\n    axios.post(\"https://data-visualisation-cliff.herokuapp.com/getDataItem\", {\r\n        \"metricId\": metricData? metricData._id : \"\"\r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      setObjectData(res.data.metricData);\r\n    })\r\n    .catch(err => console.log(err));\r\n  },[metricData])\r\n  const labels = objectData.map(item => {\r\n    const date = new Date(item.timestamp);\r\n    const day = date.getDate();\r\n    const month = date.getMonth()+1;\r\n    const year = date.getFullYear();\r\n    return day+\"-\"+month+\"-\"+year;\r\n  });\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Anomaly',\r\n        data:objectData.map(item => (item.line_status!==0)?item.original_value:null),\r\n        borderColor: 'rgb(255, 0,0)',\r\n        backgroundColor:'rgba(255, 0,0)',\r\n      },\r\n      {\r\n        label: 'Original value',\r\n        data:objectData.map(item => (item.line_status===3 || item.line_status===0)?item.original_value:null),\r\n        borderColor: 'rgb(0, 0,255)',\r\n        backgroundColor:'rgba(0, 0,255)',\r\n      },\r\n      {\r\n        label: 'Min-Band',\r\n        data: objectData.map(item => item.min_band),\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n      {\r\n        label: 'Max-band',\r\n        data: objectData.map(item => item.max_band),\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n      {\r\n        label: 'Forcasted Value',\r\n        data: objectData.map(item => item.forecasted_value),\r\n        borderColor: 'rgba(0,0,0, 0.5)',\r\n        backgroundColor: 'rgba(0,0,0, 0.5)',\r\n      }\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"col-12 py-5\">\r\n        <Line options={options} data={data}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport \"./Pagination.css\";\r\nconst Pagination = ({ currentPage, noOfPages, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= noOfPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul style={{marginBottom:\"100px\"}}className='pagination justify-content-center mt-4'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <div onClick={() => paginate(number)} className={(number===currentPage)?'active-page page-link':'page-link'}>\r\n              {number}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from \"react\";\r\nimport Metrics from \"../Metrics/Metric\";\r\nimport \"./Dashboard.css\";\r\nimport { objectData } from \"../../assignment_data/data\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nconst Dashboard = (props) => {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://data-visualisation-cliff.herokuapp.com/getMetrics\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setMetrics(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  const noOfPages = metrics ? metrics.length : 1;\r\n\r\n  return (\r\n    <>\r\n      {(metrics.length ===0 ) ? (\r\n        <div class=\"text-center\" style={{position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:\"-25px\",marginRight:\"-25px\"}}>\r\n          <div class=\"spinner-border text-primary\" style={{width:\"50px\",height:\"50px\"}} role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n              <span className=\"navbar-brand mb-0 h1 mx-auto ms-md-5\">\r\n                Data Visualisation{\" \"}\r\n              </span>\r\n            </div>\r\n          </nav>\r\n          <div className=\"container\" style={{ paddingTop: \"70px\" }}>\r\n            <div\r\n              className=\"row mx-3 d-flex justify-content-center\"\r\n              style={{ background: \"#fff\" }}\r\n            >\r\n              <div className=\"col-12\">\r\n                <h4 className=\"pt-4 ps-3 pb-2\" style={{ color: \"#333\" }}>\r\n                  Metric Data\r\n                </h4>\r\n              </div>\r\n              <Metrics metricData={metrics[currentPage - 1]} />\r\n              <Chart metricData={metrics[currentPage - 1]} />\r\n              <Pagination noOfPages={noOfPages} currentPage={currentPage} paginate={paginate}\r\n              />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <>\n      <Dashboard/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}